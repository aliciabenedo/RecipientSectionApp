/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package foodrescue.app;

import foodrescue.app.FoodDonation;
import javax.swing.*;
import java.util.ArrayList;

/**
 *
 * @author NagbontianAliciaBene
 */
public class RecipientDashboard extends javax.swing.JFrame {
    private Recipient recipient;
    private ArrayList<FoodDonation> availableDonations;
    
    private void displayDonationHistory() {
    StringBuilder history = new StringBuilder("Claimed Donations:\n");
    for (FoodDonation donation : recipient.getClaimedDonations()) {
        history.append("- ").append(donation.getFoodType())
               .append(" (Quantity: ").append(donation.getQuantity()).append(")\n");
    }
    JOptionPane.showMessageDialog(this, history.toString());
}


    /**
     * Creates new form RecipientDashboard
     */
    public RecipientDashboard() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Food Rescue Network - Recipient Dashboard");        

    
        recipient = new Recipient("Shelter A", "contact@sheltera.com");
        availableDonations = new ArrayList<>();
        availableDonations.add(new FoodDonation("Bread", 20, "2024-12-01"));
        availableDonations.add(new FoodDonation("Milk", 10, "2024-11-20"));
        availableDonations.add(new FoodDonation("Rice", 50, "2024-11-15"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        viewAvailableDonations = new javax.swing.JButton();
        claimDonations = new javax.swing.JButton();
        updateProfile = new javax.swing.JButton();
        mainMenu = new javax.swing.JButton();
        viewRequestHistory = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLabel.setText("recipient dashboard");

        viewAvailableDonations.setText("view avaiable donations");
        viewAvailableDonations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAvailableDonationsActionPerformed(evt);
            }
        });

        claimDonations.setText("claim donation");
        claimDonations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                claimDonationsActionPerformed(evt);
            }
        });

        updateProfile.setText("update profile");
        updateProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProfileActionPerformed(evt);
            }
        });

        mainMenu.setText("main menu");
        mainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuActionPerformed(evt);
            }
        });

        viewRequestHistory.setText("request history");
        viewRequestHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRequestHistoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(viewAvailableDonations)
                            .addComponent(updateProfile)
                            .addComponent(claimDonations)
                            .addComponent(viewRequestHistory)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(mainMenu)))
                .addContainerGap(154, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(titleLabel)
                .addGap(144, 144, 144))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addGap(67, 67, 67)
                .addComponent(viewAvailableDonations)
                .addGap(18, 18, 18)
                .addComponent(claimDonations)
                .addGap(18, 18, 18)
                .addComponent(updateProfile)
                .addGap(18, 18, 18)
                .addComponent(viewRequestHistory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(mainMenu)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void claimDonationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_claimDonationsActionPerformed
        // TODO add your handling code here:
        if (!availableDonations.isEmpty()) {
            FoodDonation donation = availableDonations.remove(0); // Claim the first donation
            recipient.claimDonation(donation);
            JOptionPane.showMessageDialog(this, "Claimed: " + donation.getFoodType());
        } else {
            JOptionPane.showMessageDialog(this, "No donations available to claim.");
        }
    }//GEN-LAST:event_claimDonationsActionPerformed

    private void viewAvailableDonationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAvailableDonationsActionPerformed
        // TODO add your handling code here:
        StringBuilder donations = new StringBuilder("Available Donations:\n");
        for (FoodDonation donation : availableDonations) {
            donations.append("- ").append(donation.getFoodType())
                     .append(" (Quantity: ").append(donation.getQuantity())
                     .append(", Expiry: ").append(donation.getExpirationDate()).append(")\n");
        }
        JOptionPane.showMessageDialog(this, donations.toString());
        
    }//GEN-LAST:event_viewAvailableDonationsActionPerformed

    private void updateProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProfileActionPerformed
        // TODO add your handling code here:
        String newContactInfo = JOptionPane.showInputDialog(this, "Enter new contact information:");
        if (newContactInfo != null) {
            recipient.setContactInfo(newContactInfo);
            JOptionPane.showMessageDialog(this, "Contact information updated.");
        }
    }//GEN-LAST:event_updateProfileActionPerformed

    private void mainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuActionPerformed
        // TODO add your handling code here:
       // new MainLandingPage().setVisible(true);
       // this.dispose();
    }//GEN-LAST:event_mainMenuActionPerformed

    private void viewRequestHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRequestHistoryActionPerformed
        // TODO add your handling code here:                                       
        StringBuilder history = new StringBuilder("Request History:\n");
        for (FoodDonation request : recipient.getRequestHistory()) {
          history.append("- ").append(request.getFoodType())
                .append(" (Quantity: ").append(request.getQuantity())
                .append(", Expiry: ").append(request.getExpirationDate()).append(")\n");
    }
   if (history.length() == "Request History:\n".length()) {
    JOptionPane.showMessageDialog(this, "No requests have been made yet.");
} else {
    JOptionPane.showMessageDialog(this, history.toString());
}


    }//GEN-LAST:event_viewRequestHistoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecipientDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecipientDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecipientDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecipientDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RecipientDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton claimDonations;
    private javax.swing.JButton mainMenu;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton updateProfile;
    private javax.swing.JButton viewAvailableDonations;
    private javax.swing.JButton viewRequestHistory;
    // End of variables declaration//GEN-END:variables
}
